---
title: "ENVS 193DS Final"
format: html
---

Repository: https://github.com/chloecarlstrom/ENVS-193DS_spring-2025_final

# Reading in data/packages

```{r, warning=FALSE,message=FALSE}
library(tidyverse)
library(here)
library(janitor)
library(dplyr)
library(lubridate)
library(MuMIn)
library(DHARMa)
library(ggeffects)

sst <- read.csv(here("data", "SST_update2023.csv"))

nest_boxes <- read.csv(here("data", "occdist.csv"))

```

# Problem 1. Research Writing

## a.

## b.

## c.

# Problem 2. Data Visualization

## a. Cleaning and summarizing 
```{r}
sst_clean <- sst %>% #naming new object from sst data frame
  mutate( #function to change data
    year = factor(year(date)), #making year as a factor from date column
    month = factor(month(date, label = TRUE), ordered = TRUE)) %>% #making a month factor from date
  group_by(year, month) %>% #grouping by year and month
  summarise(mean_monthly_sst = mean(temp, na.rm =TRUE)) %>% #using month data to find mean monthly sst
  ungroup() %>% #ungrouping data
  select(year, month, mean_monthly_sst) %>% #showing only selected columns
  filter(year %in% c("2018", "2019", "2020", "2021", "2022", "2023")) 

slice_sample(sst_clean, n = 5)

str(sst_clean)


```

## b. Visualize the data
```{r}
ggplot(data = sst_clean, aes(x = month, y = mean_monthly_sst, group = year, color = factor(year))) + #setting up data for figure, changing year to numeric
  geom_line() + #line geometry
  geom_point() + #point geometry
  scale_color_manual(values = c("2018" = "lightblue", "2019" = "deepskyblue", "2020" = "dodgerblue3", "2021" = "royalblue1", "2022" = "blue2", "2023" = "darkblue")) + #coloring lines in gradient of single color
  theme(
    panel.background = element_blank(), #removing background
    panel.grid = element_blank(), #removing grid lines
    panel.border = element_rect(color = "black", fill = NA), #creating line around plot
    axis.ticks = element_blank(), #removing axis ticks
    legend.position = c(0.1, 0.9), #adding legend position inside box
    legend.justification = c("left", "top") #formating legend position
  ) +
  labs( #naming axes, legend
    x = "Month", 
    y = "Mean Monthly sea surface temperature (C)", 
    color = "Year"
  )

```

# Problem 3. Data Analysis

## a. Response variable
The 0s and 1s are used to denote if the species is present in the nest box with 1 being yes and 0 being no. 

## b. Purpose of study
The Swift Parrots are critically endangered and the other two species, Tree Martins and Common Starlings are their only nest competitors. Both exploit nest boxes, with Tree Martins being a native species and Common Starlings being introduced. 

## c. Difference in "seasons"
The years represent breeding seasons when the parrots bred at the study site. These breeding events are triggered by mast tree flowering events. 

## d. Table of models
4 models total: 

| Model number |season| distance to forest edge |    description              |  
|:------------:|:---:|:------------------------:|-----------------------------|  
| 1            |     |                          | null model                  |
| 2            |  X  |           X              | saturated model             | 
| 3            |  X  |                          | season and sp occupancy     |   
| 4            |     |           X              | distance and sp occupancy   |    


## e. Run the models
```{r}
nest_boxes <- nest_boxes %>% 
  mutate(
    season = factor(season) #making season into a factor
  )

str(nest_boxes) #showing structure to ensure variables have correct form

#null model
model1 <- glm(sp ~ 1, #predictor and response variables
              data = nest_boxes, #data frame
              family = "binomial") #data form

#saturated model
model2 <- glm(sp ~ season + edge.distance, #predictor and response variables
              data = nest_boxes, #data frame
              family = "binomial") #data form

#model with season only
model3 <- glm(sp ~ season, #predictor and response variables
              data = nest_boxes, #data frame
              family = "binomial") #data form

#model with distance to edge only
model4 <- glm(sp ~ edge.distance, #predictor and response variables
              data = nest_boxes, #data frame
              family = "binomial") #data form

```

## f. Check the diagnostics
```{r}
#diagnostics for each model

#model 1
plot(
  simulateResiduals(model1)
     )

#model 2
plot(
  simulateResiduals(model2)
)

#model 3
plot(
  simulateResiduals(model3)
)

#model 4
plot(
  simulateResiduals(model4)
)


```

## g. Select the best model
```{r}
AICc(
  model1,
  model2,
  model3,
  model4
) %>% 
arrange(AICc)

```
The best model as determined by the Akaike's Information Criterion (AIC) was the saturated model with the combined effects of both season and distance from forest edge on nest box occupancy. 

## h. Visualize the model predictions
```{r}
mod_preds <- ggpredict(model2,
                       terms = c("edge.distance", "season"))
ggplot() +
  geom_point(data = nest_boxes, 
             aes(x = edge.distance, y = sp), 
             alpha = 0.3) +
  geom_ribbon(data = mod_preds,
              aes(x = x, 
                  ymin = conf.low, 
                  ymax = conf.high, 
                  fill = group),
              alpha = 0.2) +
  geom_line(data = mod_preds,
            aes(x = x, y = predicted, color = group), size = 1) +
  scale_y_continuous(limits = c(0, 1)) +
  labs(
    x = "Distance to Forest Edge",
    y = "Swift Parrot Nest Box Occupancy",
    color = "Season", 
    fill = "Season"
  ) +
  scale_fill_manual(
    values = c(
      "2016" = "slateblue1",
      "2019" = "mediumorchid3"
    )) +
  scale_color_manual(
    values = c(
      "2016" = "darkslateblue",
      "2019" = "darkmagenta"
    ))


```

*Figure 1. Predicted Swift Parrot nest box occupancy related distance to forest edge grouped by season* Swift parrots tend to occupy more nest boxes closer to the forest edge. Overall more nest boxes were occupied in 2016 than 2019. Stojanovic, Dejan et al. (2021). Do nest boxes breed the target species or its competitors? A case study of a critically endangered bird [Dataset]. Dryad. https://doi.org/10.5061/dryad.83bk3j9sb

## j. Calculate model predictions
```{r}

ggpredict(model2, #model used
          terms = c("edge.distance [0]", "season")) #setting distance to 0, adding season

ggpredict(model2, #model used
          terms = c("edge.distance [900]", "season")) #setting distance to 900, adding season

```

## k. Interpret your results

